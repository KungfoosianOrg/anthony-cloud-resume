name: Site Update

on:
  push:
    branches: [ "main" ]
    paths: ["github/**"]
  
  # make this workflow reusable 
  workflow_call:
    inputs:
      called_manually:
        description: Whether or not this workflow is called manually, or by another workflow (as a reusable workflow)
        type: string
        default: 'false'

      AWS_ROLE_ARN:
        type: string

      S3_BUCKET_NAME:
        type: string

      CLOUDFRONT_DISTRIBUTION_ID:
        type: string

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      called_manually:
        description: Whether or not this workflow is called manually, or by another workflow (as a reusable workflow)
        type: string
        default: 'true'


permissions:
  id-token: write
  contents: read


env:
  GITHUB_SRC_FOLDER: 'github' # GitHub folder to sync to AWS ending with '/', e.g: 'prod/'. If sync from root folder, leave as ''
  VISITOR_COUNTER_MODULE_PATH: /scripts/visitorCounterModule.js


jobs:
  deploy-to-aws-manual-call:
    if: ${{ inputs.called_manually == 'true' }}
    
    runs-on: ubuntu-latest

    steps:
      - name: checks out this repo 
        uses: actions/checkout@v4

      - name: validates HTML
        uses: anishathalye/proof-html@v2
        with:
          directory: ./${{ env.GITHUB_SRC_FOLDER }}

      - name: runs script tests
        run: |
          npm install
          npm test

      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.MANUAL_AWS_DEPLOY_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true

      
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity


      - name: update visitor counter API's invocation URL
        env:
          GH_TOKEN: ${{ secrets.MANUAL_GITHUB_PERSONAL_ACCESS_TOKEN }}
          
        run: |
          API_ENDPOINT_URL=$(gh variable get VISITOR_COUNTER_API_INVOKE_URL)
          echo api url endpoint from GH CLI: $API_ENDPOINT_URL

          sed -i "s%.*const VISITOR_COUNTER_API_INVOKE_URL.*%const VISITOR_COUNTER_API_INVOKE_URL='$API_ENDPOINT_URL'%" ./${{ env.GITHUB_SRC_FOLDER }}/scripts/visitorCounterModule.js


      - name: sync files to aws s3
        shell: bash
        run: |
          aws s3 sync ./${{ env.GITHUB_SRC_FOLDER }}/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} \
                                                    --follow-symlinks \
                                                    --delete \
                                                    --exclude '.git/*' \
                                                    --exclude 'README.md' \
                                                    --exclude '.github/*'


  deploy-to-aws-workflow-call:
    if: ${{ inputs.called_manually == 'false' }}

    runs-on: ubuntu-latest

    outputs:
      AWS_ROLE_ARN: ${{ steps.inputDecrypt.outputs.AWS_ROLE_ARN }}
      S3_BUCKET_NAME: ${{ steps.inputDecrypt.outputs.S3_BUCKET_NAME }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ steps.inputDecrypt.outputs.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: checks out this repo 
        uses: actions/checkout@v4

      - name: validates HTML
        uses: anishathalye/proof-html@v2
        with:
          directory: ./${{ env.GITHUB_SRC_FOLDER }}

      - name: runs script tests
        run: |
          npm install
          npm test

      - name: decrypt inputs
        id: inputDecrypt
        run: |
          AWS_ROLE_ARN=$(echo -n ${{ inputs.AWS_ROLE_ARN }} | base64 -d | gpg --decrypt --quiet --batch --passphrase ${{ secrets.MANUAL_GITHUB_GPG_PASSWORD }} --output - )

          echo "AWS_ROLE_ARN=$AWS_ROLE_ARN" >> "$GITHUB_OUTPUT"


          S3_BUCKET_NAME=$(echo -n ${{ inputs.S3_BUCKET_NAME }} | base64 -d | gpg --decrypt --quiet --batch --passphrase ${{ secrets.MANUAL_GITHUB_GPG_PASSWORD }} --output - )

          echo "S3_BUCKET_NAME=$S3_BUCKET_NAME" >> "$GITHUB_OUTPUT"


          CLOUDFRONT_DISTRIBUTION_ID=$(echo -n ${{ inputs.CLOUDFRONT_DISTRIBUTION_ID }} | base64 -d | gpg --decrypt --quiet --batch --passphrase ${{ secrets.MANUAL_GITHUB_GPG_PASSWORD }} --output - )

          echo "CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID" >> "$GITHUB_OUTPUT"


      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.MANUAL_AWS_DEPLOY_REGION }}
          role-to-assume: ${{ steps.inputDecrypt.outputs.AWS_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true

      
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity


      - name: update visitor counter API's invocation URL
        env:
          GH_TOKEN: ${{ secrets.MANUAL_GITHUB_PERSONAL_ACCESS_TOKEN }}
          
        run: |
          API_ENDPOINT_URL=$(gh variable get VISITOR_COUNTER_API_INVOKE_URL)
          echo api url endpoint from GH CLI: $API_ENDPOINT_URL

          sed -i "s%.*const VISITOR_COUNTER_API_INVOKE_URL.*%const VISITOR_COUNTER_API_INVOKE_URL='$API_ENDPOINT_URL'%" ./${{ env.GITHUB_SRC_FOLDER }}/scripts/visitorCounterModule.js


      - name: sync files to aws s3
        shell: bash
        run: |
          aws s3 sync ./${{ env.GITHUB_SRC_FOLDER }}/ s3://${{ steps.inputDecrypt.outputs.S3_BUCKET_NAME }} \
                                                    --follow-symlinks \
                                                    --delete \
                                                    --exclude '.git/*' \
                                                    --exclude 'README.md' \
                                                    --exclude '.github/*'


  create-cloudfront-invalidation-manual-call:
    needs: [ deploy-to-aws-manual-call ]

    runs-on: ubuntu-latest

    steps:
      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.MANUAL_AWS_DEPLOY_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true
              
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity    

      - name: refresh_cloudfront_scripts_path
        run: |
          aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
              --region ${{ secrets.MANUAL_AWS_DEPLOY_REGION }} \
              --paths "${{ env.VISITOR_COUNTER_MODULE_PATH }}"

  
  create-cloudfront-invalidation-workflow-call:
    needs: [ deploy-to-aws-workflow-call ]

    runs-on: ubuntu-latest

    steps:
      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.MANUAL_AWS_DEPLOY_REGION }}
          role-to-assume: ${{ needs.deploy-to-aws-workflow-call.outputs.AWS_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true
              
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity    

      - name: refresh_cloudfront_scripts_path
        run: |
          aws cloudfront create-invalidation \
              --distribution-id ${{ needs.deploy-to-aws-workflow-call.outputs.CLOUDFRONT_DISTRIBUTION_ID }} \
              --region ${{ secrets.MANUAL_AWS_DEPLOY_REGION }} \
              --paths "${{ env.VISITOR_COUNTER_MODULE_PATH }}"
