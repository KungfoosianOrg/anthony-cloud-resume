name: Deploy Visitor Counter SAM app to AWS

on:
    push:
        # branches: ["main"]
        branches: ["terraform"]
        paths: ["aws/visitorCounter/**"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
    
    # reusable workflow
    workflow_call:
      inputs:
        called_manually:
          description: Whether or not this workflow is called manually, or by another workflow (as a reusable workflow)
          type: string
          default: 'false'

        AWS_ROLE_ARN:
          type: string

        VISITORCOUNTER_LAMBDA_ARN:
          type: string

permissions:
  id-token: write
  contents: read

env:
  # ENV_STACK_NAME: my-sam-stack
  VISITOR_COUNTER_MODULE_PATH: /scripts/visitorCounterModule.js
  lambda_source_folder-name: visitorCounter
  ghrepo_secret_variable_name: AWS_VISITOR_COUNTER_LAMBDA_ARN


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: check out repo
        uses: actions/checkout@v4

      - name: create default aws config for unit test
        run: |
          mkdir ~/.aws
          touch ~/.aws/config
          echo "[default]" >> ~/.aws/config
          echo "aws_access_key_id=test" >> ~/.aws/config
          echo "aws_secret_access_key=test" >> ~/.aws/config

      - name: install python test dependencies
        run: |
          pip3 install -r aws/${{ env.lambda_source_folder-name }}/tests/requirements.txt

      - name: run Python unittest
        run: |
          python3 -m unittest aws/${{ env.lambda_source_folder-name }}/tests/test_*.py

  pass-variable:
    needs: [ test ]

    runs-on: ubuntu-latest

    outputs:
      lambda_source_folder-name: ${{ steps.step1.outputs.lambda_source_folder-name }}

    steps:
      - name: print variables as outputs to be passed into other jobs
        id: step1
        run: |
          echo "lambda_source_folder-name=${{ env.lambda_source_folder-name }}" >> "$GITHUB_OUTPUT"
        


  package-n-deploy-lambda:
    needs: [ test, pass-variable ]

    uses: ./.github/workflows/package-n-deploy-lambda.yml

    with:
        lambda_source_folder-name: ${{ needs.pass-variable.outputs.lambda_source_folder-name }}

        output-zipped_file_name: ${{ needs.pass-variable.outputs.lambda_source_folder-name }}.zip

        AWS_ROLE_ARN: ${{ inputs.AWS_ROLE_ARN }}

        LAMBDA_ARN: ${{ inputs.VISITORCOUNTER_LAMBDA_ARN }}

    secrets: inherit