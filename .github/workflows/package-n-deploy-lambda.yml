name: Package Lambda code into a Zip file & deploy to AWS

on:
  workflow_call:
    inputs:
      lambda_source_folder-name:
        required: true
        type: string

      output-zipped_file_name:
        required: true
        type: string

      lambda_function_arn:
        required: true
        type: string



env:
    OUTFILE_FULL_PATH: "~/out/${{ inputs.output-zipped_file_name }}" # put in an output folder to make packaging several lambda code files easier


jobs:
    package:
        runs-on: ubuntu-latest

        steps:
            - name: check out repo
              uses: actions/checkout@v3

            - name: creating zip package
              run: |
                cd ./aws/${{ inputs.lambda_source_folder-name }}
                
                mkdir package
                
                pip3 install --target ./package boto3

                cd package
                zip -r ${{ env.OUTFILE_FULL_PATH }} .

                cd .. && rm -rf package
                zip ${{ env.OUTFILE_FULL_PATH }} *

            - name: upload zipped package as an artifact for other workflows to use
              uses: actions/upload-artifact@v4
              with:
                name: ${{ inputs.output-zipped_file_name }}
                path: ${{ env.OUTFILE_FULL_PATH }}


    deploy:
        needs: [ package ]

        runs-on: ubuntu-latest

        steps:
            - name: download zipped package from previous job
              uses: actions/download-artifact@v4
              with:
                name: ${{ inputs.output-zipped_file_name }}


            - name: get temporary AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ${{ secrets.AWS_STACK_REGION }}
                role-to-assume: ${{ secrets.AWS_ROLE_ARN }} 
                role-session-name: GHASession-anthony_cloud_resume
                unset-current-credentials: true
                retry-max-attempts: 3
                output-credentials: true  

            - name: upload new code to Lambda
              run: |
                aws lambda update-function-code \
                            --function-name ${{ inputs.lambda_function_arn }} \
                            --region ${{ secrets.AWS_STACK_REGION }}


