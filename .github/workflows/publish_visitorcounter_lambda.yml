name: Deploy Visitor Counter SAM app to AWS

on:
    push:
        branches: ["main", "gha-overhaul"]
        paths: ["aws/**"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ENV_STACK_NAME: my-sam-stack


jobs:
  test-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: check out repo
        uses: actions/checkout@v3

      - name: create default aws config for unittest
        run: |
          mkdir ~/.aws
          touch ~/.aws/config
          echo "[default]" >> ~/.aws/config
          echo "aws_access_key_id=test" >> ~/.aws/config
          echo "aws_secret_access_key=test" >> ~/.aws/config

      - name: install python test dependencies
        run: |
          pip3 install -r ./tests/requirements.txt

      - name: run Python unittest
        run: |
          python3 -m unittest
  

  deploy-sam-app:
    runs-on: ubuntu-latest

    needs: [
      test-lambda
    ]

    outputs:
      newEndpointUrl: ${{ steps.getSamIdStep.newEndpointUrl }}
      endpointNeedUpdate: ${{ steps.getSamIdStep.endpointNeedUpdate }}
      

    steps:
      - name: check out repo
        uses: actions/checkout@v3

      - name: change samconfig.toml to prod values
        run: |
          echo Removing profile line to use default profile
          sed -i 's/.*profile.*//' ./samconfig.toml

          echo Add SAM template parameters
          sed -i 's/.*parameter_overrides.*/parameter_overrides = "SubscriberEmailParam=\\"${{ secrets.SNS_ALERT_EMAIL }}\\""/' ./samconfig.toml 

          echo Set App production name, region, and corresponding S3 bucket
          sed -i 's/.*stack_name.*/stack_name = "${{ env.ENV_STACK_NAME }}"/' ./samconfig.toml
          sed -i 's/.*s3_prefix.*/s3_prefix = "${{ env.ENV_STACK_NAME }}"/' ./samconfig.toml
          sed -i 's/.*region.*/region = "${{ secrets.AWS_STACK_REGION }}"/' ./samconfig.toml

      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_STACK_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true    
            
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity    
          

      - name: deploy SAM template
        run: |
          echo Turning off telemetry
          echo "export SAM_CLI_TELEMETRY=0" >>~/.profile
          source ~/.profile
          
          sam deploy --debug

      - name: get API URL output and see if update repo environment variable and cloudFormation stack is needed
        id: getSamIdStep
        run: |
          echo get SAM stack ID
          api_id=$(sam list stack-outputs --output json --stack-name ${{ secrets.AWS_STACK_NAME }} --region ${{ secrets.AWS_STACK_REGION }} | jq -r '.[].OutputValue')

          new_endpoint_url="$api_id.execute-api.${{ secrets.AWS_STACK_REGION }}.amazonaws.com"
        
          echo check if new url and current environment variable are same
          if [ "$new_endpoint_url" != "${{ vars.VISITOR_COUNTER_API_INVOKE_URL }}" ];
          then
            echo updating environment variable 
            echo "newEndpointUrl=$new_endpoint_url" >> "$GITHUB_OUTPUT"
            echo "endpointNeedUpdate=true" >> "$GITHUB_OUTPUT"
          fi

  
  update_env_and_stack_w_new_API_endpoint:
    runs-on: ubuntu-latest
    
    needs: [
      deploy-sam-app
      ]
      
    if: ${{ needs.deploy-sam-app.outputs.endpointNeedUpdate }} == 'true'

    steps:
      - name: check out repo
        uses: actions/checkout@v3

      - name: set repo environment variable
        uses: action-pack/set-variable@v1
        with:
          name: VISITOR_COUNTER_API_INVOKE_URL
          value: ${{ needs.deploy-sam-app.outputs.newEndpointUrl }}
          token: ${{ secrets.MY_GH_PERSONAL_ACCESS_TOKEN }}

      - name: get temporary AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_STACK_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} 
          role-session-name: GHASession-anthony_cloud_resume
          unset-current-credentials: true
          retry-max-attempts: 3
          output-credentials: true    
              
      - name: verify temp credentials validity
        run: |
          aws sts get-caller-identity    

      - name: update stack with new endpoint URL
        run: |
          aws cloudformation update-stack --stack-name ${{ secrets.AWS_ROOT_STACK_ID }} \
                                          --use-previous-template \
                                          --parameters ParameterKey=GitHubOrgParameter,UsePreviousValue=true \
                                                       ParameterKey=RepositoryNameParameter,UsePreviousValue=true \
                                                       ParameterKey=OIDCProviderARNParameter,UsePreviousValue=true \
                                                       ParameterKey=OIDCAudienceParameter,UsePreviousValue=true \
                                                       ParameterKey=RegisteredDomainNameParam,UsePreviousValue=true \
                                                       ParameterKey=FQDNsParam,UsePreviousValue=true \
                                                       ParameterKey=Route53HostedZoneIdParam,UsePreviousValue=true \
                                                       ParameterKey=ApiEndpointIdParam,ParameterValue=${{ needs.deploy-sam-app.outputs.newEndpointUrl }} \


            
